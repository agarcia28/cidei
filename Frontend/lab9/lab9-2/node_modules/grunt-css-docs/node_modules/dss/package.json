{
  "name": "dss",
  "description": "Documented Style Sheets",
  "version": "1.0.3",
  "homepage": "https://github.com/darcyclarke/dss",
  "author": {
    "name": "darcyclarke",
    "email": "darcy@darcyclarke.me",
    "url": "https://darcyclarke.me"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/darcyclarke/dss"
  },
  "bugs": {
    "url": "https://github.com/darcyclarke/dss/issues"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "https://github.com/darcyclarke/dss/blob/master/LICENSE-MIT"
    }
  ],
  "main": "dss.js",
  "engines": {
    "node": ">= 0.8.0"
  },
  "scripts": {},
  "dependencies": {},
  "devDependencies": {},
  "peerDependencies": {},
  "keywords": [
    "css",
    "dss",
    "styles",
    "docs",
    "documentation"
  ],
  "readme": "# DSS\n- **[Official Logo](http://f.cl.ly/items/1J353X3U172A1u3r2K3b/dss-logo.png)**\n- **[NPM Package](https://npmjs.org/package/dss)**\n\n**DSS**, Documented Style Sheets, is a comment styleguide and parser for CSS, LESS, STYLUS, SASS and SCSS code.\n\n## Generating Documentation\n\nIn most cases, you will want to include the **DSS** parser in a build step that will generate documentation files automatically. **[grunt-dss](https://github.com/darcyclarke/grunt-dss)** is the official **DSS** `grunt` task which does just that.\n\n## Parser Example\n\n#### Example Comment Block\n\n```css\n/**\n  * @name Button\n  * @description Your standard form button.\n  * \n  * @state :hover - Highlights when hovering.\n  * @state :disabled - Dims the button when disabled.\n  * @state .primary - Indicates button is the primary action.\n  * @state .smaller - A smaller button\n  * \n  * @markup\n  *   <button>This is a button</button>\n  */ \n````\n#### or\n\n```scss\n//\n// @name Button\n// @description Your standard form button.\n// \n// @state :hover - Highlights when hovering.\n// @state :disabled - Dims the button when disabled.\n// @state .primary - Indicates button is the primary action.\n// @state .smaller - A smaller button\n// \n// @markup\n//   <button>This is a button</button>\n// \n````\n\n#### Example Parser Implementation\n\n```javscript\nvar lines = fs.readFileSync('styles.css'),\n    options = {},\n    callback = function(parsed){\n      console.log(parsed);\n    };\ndss.parse(lines, options, callback);\n````\n\n#### Example Generated Object\n\n```javascript\n{\n  \"name\": \"Button\",\n  \"description\": \"Your standard form button.\",\n  \"state\": [\n    { \n      \"name\": \":hover\",\n      \"escaped\": \"pseudo-class-hover\",\n      \"description\": \"Highlights when hovering.\"\n    },\n    {\n      \"name\": \":disabled\",\n      \"escaped\": \"pseudo-class-disabled\",\n      \"description\": \"Dims the button when disabled.\"\n    },\n    {\n      \"name\": \".primary\",\n      \"escaped\": \"primary\",\n      \"description\": \"Indicates button is the primary action.\"\n    },\n    {\n      \"name\": \".smaller\",\n      \"escaped\": \"smaller\",\n      \"description\": \"A smaller button\"\n    }\n  ],\n  \"markup\": {\n    \"example\": \"<button>This is a button</button>\",\n    \"escaped\": \"&lt;button&gt;This is a button&lt;/button&gt;\"\n  }\n}\n````\n\n## Modifying Parsers\n\n**DSS**, by default, includes 4 parsers for the **name**, **description**, **states** and **markup** of a comment block. You can add to or override these default parsers using the following:\n\n```javascript\n// Matches @link\ndss.parser('link', function(i, line, block){\n\n  // Replace link with HTML wrapped version\n  var exp = /(b(https?|ftp|file)://[-A-Z0-9+&@#/%?=~_|!:,.;]*[-A-Z0-9+&@#/%=~_|])/ig;\n  line.replace(exp, \"<a href='$1'>$1</a>\");\n  return line;\n   \n});\n````\n\n",
  "readmeFilename": "README.md",
  "_id": "dss@1.0.3",
  "_shasum": "59e76733b698671f81f0987cc2890adb3f114353",
  "_from": "dss@1.0.3",
  "_resolved": "https://registry.npmjs.org/dss/-/dss-1.0.3.tgz"
}
